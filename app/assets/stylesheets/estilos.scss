
/* PALETA DE COLORES USA*/

//## Gray and brand colors for use across Bootstrap.
//estas variables viened de boostrap y se usan para cambiar el juego de colores completo//el archivo  _bootstrap-variables.scss  contiene la lista completa de varialbes que se pueden cambiar .. solo hay que sacar las que nos interesen y ponerlas aqui con el valor que queramos.

$gray-base:              #EDE4E9 !default;
$gray-darker:            lighten($gray-base, 13.5%) !default; // #222
$gray-dark:               #042040;   // #333
$gray:                   #4E3F49; // #555
$gray-light:             #534561; // #777
$gray-lighter:           #4F6995; // #eee
$brand-primary:         #042A69 !default; // #337ab7
$brand-success:         #5cb85c !default;
$brand-info:            #4F6995 !default;
$brand-warning:         #f0ad4e !default;
$brand-danger:          #BF1438 !default;

//## Settings for some of the most global styles.

//** Background color for `<body>`.
$body-bg: #EDE4E9;
//** Global text color on `<body>`.
$text-color:            $gray-dark !default;

//** Global textual link color.
$link-color:            $brand-primary !default;
//** Link hover color set via `darken()` function.
$link-hover-color:      darken($link-color, 15%) !default;
//** Link hover decoration.
$link-hover-decoration: underline !default;



/* Funciones en SaSS para no repetir codigo*/

// para calcular y transformar px a REM y  evitar calcularlo manualmente cada vez

@function calculateRem($size) {
  $remSize: $size / 16px; //Default font size on html element is 100%, equivalent to 16px;
  @return #{$remSize}rem;
}








/*Aqui inician los componentes de la pagina*/


body {
  padding-top: calculateRem(70px); //para que la barra de navegacion fija no tape parte del contenido -- llama a la funcion calculateRem para calcular el valor REM de 70px
}

//Navegacion:  navbar
.navbar{
    background-color: $brand-primary !important;
    box-shadow: 0 calculateRem(1px) calculateRem(2px) rgba(0, 0, 0, 0.6);
    transition: 0.3s;
}

h4  {
  color:$brand-danger !important;  //titulos de color rojo
}



//Botones
/*
.btn {
    position: relative;
    display: block;
    margin: calculateRem(30px) auto;
    padding: 0;
    overflow: hidden;
    border-width: 0;
    outline: none;
    border-radius: calculateRem(0.5px) !important;
    box-shadow: 0 calculateRem(1px) calculateRem(4px) rgba(0, 0, 0, .6);
    //background-color: $gray-lighter!important;
    //color: $body-bg;
    transition: background-color .3s;
    height: calculateRem(54px);
    line-height: calculateRem(56px);
}

.btn:before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    display: block;
    width: 0;
    padding-top: 0;
    border-radius: 100%;
    background-color: rgba(236, 240, 241, .3);
    -webkit-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    -o-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
}

.btn:active:before {
  width: 120%;
  padding-top: 120%;
  transition: width .2s ease-out, padding-top .2s ease-out;
}*/


//las tarjetas
/*
.card {
  overflow:hidden;
  box-shadow: 0 calculateRem(1px) calculateRem(2px) 0 rgba(0,0,0,0.2);
  transition: 0.3s;
}
/* On mouse-over, add a deeper shadow * /
.card:hover {
  box-shadow: 0 calculateRem(8px)  calculateRem(16px) 0 rgba(0,0,0,0.2);
}
.card-block .rotate {
  z-index: 8;
  float: right;
  height: 100%;
}
/* Add some padding inside the card container * /
.container {
  padding: calculateRem(2px)  calculateRem(16px);
}

.card-block .rotate i {
  color: rgba(20, 20, 20, 0.15);
  position: absolute;
  left: 0;
  left: auto;
  right: calculateRem(-10px);
  bottom: 0;
  display: block;
  -webkit-transform: rotate(-44deg);
  -moz-transform: rotate(-44deg);
  -o-transform: rotate(-44deg);
  -ms-transform: rotate(-44deg);
  transform: rotate(-44deg);
}

*/